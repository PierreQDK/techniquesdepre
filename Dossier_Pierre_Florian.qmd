---
title: "Dossier"
author: "Pierre et Florian"
format:
  html:
    toc: true
    toc-title: Sommaire
    code-fold: true
    echo: true
    eval: true
    incremental: true
  pdf:
    toc: true
    toc-title: Sommaire
    echo: true
    eval: true
  revealjs:
    incremental: true
---

Choix 2 : Série CVS  ou non saisonnière mensuelle 
(Possibilité d’utiliser la série du dossier cours « Séries temporelles univariées »)  

```{r}
# Importation des librairies

library(tidyquant)
library(tidyverse)
```

# 1. Analyse préliminaire

## a. Présentation et caractérisation de la série étudiée : source, définition, graphique

```{r}
# Importation des données

cac40 <- tq_get(
  "^FCHI",
  from = "2000-01-01", to = "2019-12-31", periodicity = "monthly"
) |>
  mutate(
    date = date %m+% months(1)
  ) |>
  select(
    date, close
  ) |>
  rename(
    cloture = close
  )

head(cac40, n = 20)
```


La série de données utilisée dans cette analyse provient du site Yahoo Finance (https://finance.yahoo.com/), une plateforme de référence pour les données financières et boursières.

Elle concerne l’indice CAC 40, qui regroupe les 40 plus grandes entreprises françaises cotées à la Bourse de Paris. Cet indice est un indicateur clé de la performance des marchés financiers en France.

La série temporelle mensuelle commence en janvier 2000 et se termine en décembre 2019, couvrant ainsi une période de 20 ans.


```{r}
# Classe time series
cac40_ts <- ts(data = cac40$cloture, start = c(2000, 01), frequency = 12)

plot.ts(cac40_ts)
```



## b. Détection des points atypiques. Présenter ces points sous forme de tableau (date, type de point (AO, TC …), t-stat) et trouver des explications économiques de l’apparition des 3 plus importants 

```{r}
library(tsoutliers)

fit <- tso(cac40_ts)
plot(fit)
show(fit)
```

À l’indice 97, soit en janvier 2008, le modèle détecte un changement négatif de niveau (LS) important sur le CAC 40, de l’ordre de –726 points. Il s'agit d’un point atypique structurel dans la série.
Cette chute brutale de niveau subie par le CAC 40 en janvier 2008 correspond très probablement au début de la crise financière mondiale des subprimes. Le marché avait commencé à anticiper l'effondrement des banques, ce qui a provoqué une forte baisse des indices boursiers.


```{r}
# Série corrigée des points atypiques
adj <- fit$yadj
plot(adj)
```


## c. Vérifier la stationnarité de la série I(0) ou I(1)

### 1. Stationnarité avec ou sans tendance

```{r}
# Créer la variable temps
temps <- 1:length(cac40_ts)

# --- 1. Régression linéaire pour détecter une tendance linéaire ---
modele_tendance <- lm(cac40_ts ~ temps)

# Résumé du modèle : vérifier la significativité du coefficient de 'temps'
summary(modele_tendance)
```

Le modèle de régression linéaire ajuste la série cac40_ts en fonction du temps pour détecter une éventuelle tendance linéaire. Le coefficient associé à la variable temps est estimé à 1.2691, ce qui suggère une légère croissance au fil du temps. Toutefois, la p-value associée à ce coefficient est de 0.142, soit bien supérieure au seuil classique de 5 %. Cela signifie que, d’un point de vue statistique, aucune tendance linéaire significative ne peut être affirmée dans la série temporelle du CAC 40. Le faible R² (≈ 0.9 %) confirme que le temps n’explique qu’une infime part de la variation de la série. Autrement dit, la série pourrait évoluer dans le temps, mais pas de manière linéaire.


```{r}
# --- 2. Test de Mann-Kendall pour une tendance monotone ---
library(Kendall)

# Appliquer le test
test_mk <- Kendall(temps, cac40_ts)

# Résultat
print(test_mk)
```

En revanche, le test non paramétrique de Mann-Kendall donne des résultats très différents. Le coefficient de Kendall, tau = 0.157, est positif, ce qui indique une tendance monotone croissante. La p-value associée est de 0.00028, donc très inférieure à 0.05, ce qui permet de rejeter l’hypothèse nulle d’absence de tendance monotone. Ainsi, la série CAC 40 présente bien une tendance monotone significative, même si cette tendance n’est pas nécessairement linéaire. Ce test étant robuste aux formes non linéaires et aux distributions non normales, son résultat est particulièrement fiable dans un contexte de série financière.


### 2. Test

#### 1. ADF test

```{r}
library(urca)

# Appliquer le test ADF avec tendance
adf_test <- ur.df(cac40_ts, type = "trend", selectlags = "AIC")

# Résultats du test ADF
summary(adf_test)
```

Le test ADF a été réalisé afin de vérifier la présence d'une racine unitaire dans la série cac40_ts, en incluant une tendance dans la régression. La statistique de test obtenue est de -2.1678, ce qui est supérieur à la valeur critique à 5% (-3.43). Cela implique que l’on ne peut pas rejeter l’hypothèse nulle de non-stationnarité. Ce résultat suggère que la série présente probablement une racine unitaire, c’est-à-dire qu’elle est non stationnaire, même en tenant compte d'une tendance déterministe. La faible valeur du R² ajusté (≈ 2,3 %) confirme également une faible capacité explicative du modèle.


#### 2. KPSS test

```{r}
library(tseries)

# Appliquer le test KPSS avec tendance
kpss_test <- kpss.test(cac40_ts, null = "Trend")

# Résultats du test KPSS
print(kpss_test)
```

Le test de stationnarité de KPSS a été appliqué pour tester l’hypothèse nulle selon laquelle la série cac40_ts est stationnaire autour d’une tendance. Le résultat donne une statistique KPSS de 0.40859 avec une p-value inférieure à 0.01, ce qui signifie que l’on rejette l’hypothèse nulle au seuil de 5 %. Ce résultat confirme que la série n’est pas stationnaire autour d’une tendance, ce qui est cohérent avec les observations graphiques et les résultats du test ADF. La série présente donc une dynamique de tendance non stationnaire.


#### 3. Conclusion

L’analyse conjointe des tests ADF et KPSS conduit à la conclusion que la série cac40_ts n’est pas stationnaire, même en présence d’une tendance. Le test ADF ne permet pas de rejeter l’hypothèse de racine unitaire, indiquant une non-stationnarité. Le test KPSS, quant à lui, rejette l’hypothèse nulle de stationnarité autour d’une tendance, confirmant que la série suit une évolution non stationnaire. Ces résultats suggèrent que la série nécessite probablement une transformation (comme la différenciation) pour atteindre la stationnarité, indispensable à la plupart des modèles économétriques en séries temporelles.


### 3. Différenciation de la série

```{r}
# 1. Différencier la série
diff_cac40_ts <- diff(cac40_ts)
```


### 4. Tester la stationnarité après différenciation

#### 1. ADF test

```{r}
## Test ADF (sans tendance ni drift, car la tendance a été retirée)
library(urca)
adf_diff_test <- ur.df(diff_cac40_ts, type = "none", selectlags = "AIC")
summary(adf_diff_test)
```

Le test ADF appliqué à la série différenciée diff_cac40_ts présente une statistique de test -11.023, bien en dessous des valeurs critiques à 5% (-1.95). La p-value associée est extrêmement faible (inférieure à 0.01), ce qui nous permet de rejeter l’hypothèse nulle de racine unitaire. Ainsi, après différenciation, la série devient stationnaire. Ce résultat confirme que la différenciation a éliminé la racine unitaire, rendant la série stationnaire.


#### 2. KPSS test

```{r}
## Test KPSS (stationnarité autour d'une constante après différenciation)
library(tseries)
kpss_diff_test <- kpss.test(diff_cac40_ts, null = "Level")
print(kpss_diff_test)
```

Le test KPSS appliqué à la série différenciée montre une statistique KPSS de 0.22442 avec une p-value de 0.1. Comme la p-value est supérieure à 0.05, nous ne rejetons pas l’hypothèse nulle de stationnarité autour d’une constante. Cela suggère que, après différenciation, la série est stationnaire au niveau. Cette stationnarité au niveau implique que la série ne présente plus de tendance ou de dérive non stationnaire, renforçant l’idée que la transformation a été efficace.


#### 3. Conclusion

Après avoir différencié la série cac40_ts, les résultats des tests montrent une stationnarité évidente. Le test ADF rejette fermement l’hypothèse de racine unitaire, confirmant que la série est stationnaire après différenciation. Le test KPSS soutient également cette conclusion, indiquant que la série est stationnaire autour d’une constante. En résumé, la différenciation a réussi à rendre la série stationnaire, ce qui permet de l’utiliser pour des modèles économétriques appropriés tels que les modèles ARIMA ou autres.


### Corrélogramme

```{r}
library(gridExtra)

# Corrélogramme

acf_graph1 <- cac40_ts |> 
  ggAcf() +
  ggtitle("Corrélogramme sur la série en niveau") +
  theme_bw()

acf_graph2 <- diff_cac40_ts |>  
  ggAcf() +
  ggtitle("Corrélogramme sur la série en différence première") +
  theme_bw()

grid.arrange(acf_graph1, acf_graph2, ncol = 2)
```

Avant la différenciation, la série non stationnaire (comme une série intégrée I(1)) montre une autocorrélation significative sur les premiers lags, ce qui indique la présence d'une racine unitaire et l'absence de stationnarité. En revanche, après la différenciation, l'ACF se stabilise autour de zéro, avec des autocorrélations non significatives, ce qui suggère que la série est devenue stationnaire (I(0)). Ainsi, l'ACF de la série différenciée ne montre plus d'autocorrélations significatives, confirmant que la différenciation a éliminé la non-stationnarité, rendant la série adaptée à des analyses économétriques.


## d. Statistiques descriptives (moyenne, écart-type, skewness, kurtosis normalité, box-plot …). (cf. Chapitre 3 p38) Commenter

```{r}
library(fBasics)

stats <- basicStats(diff_cac40_ts)
show(stats)
```


La série différenciée du CAC 40 présente un minimum de -744,29, qui correspond à janvier 2008, ce qui reflète une chute importante de l'indice à cette période, probablement en raison de la crise financière mondiale déclenchée par la crise des subprimes, entraînant une baisse significative de l'indice.

Le maximum de 531,15 représente une hausse notable de l'indice, mais cette variation positive reste inférieure à la baisse maximale.

La moyenne de 1,35 indique que, en moyenne, les variations journalières de l'indice sont légèrement positives. Cependant, cette moyenne est faible, suggérant des fluctuations modérées au quotidien.

La médiane est de 38,08, ce qui montre qu'une proportion significative des observations diffère considérablement de la moyenne. En d'autres termes, la série n'est pas symétrique et présente une certaine asymétrie dans les variations de l'indice, avec des valeurs qui peuvent s'écarter de la moyenne de manière plus prononcée.

L'écart-type de 211,13 reflète la volatilité relativement élevée de la série. Les variations journalières du CAC 40 s'écartent de la moyenne de manière substantielle, ce qui indique une instabilité dans les mouvements de l'indice et des fluctuations importantes dans ses valeurs.

La skewness de -0,66 suggère que la distribution de la série est légèrement asymétrique à gauche. Cela signifie qu'il y a une prédisposition pour les baisses de l'indice à être plus marquées que les hausses, créant une queue plus longue du côté négatif de la distribution.

Enfin, la kurtosis de 0,71 est inférieure à 3, ce qui indique que la distribution des variations est moins pointue que celle d'une distribution normale. Il y a donc moins de valeurs extrêmes dans la série, ce qui suggère que les mouvements extrêmes du CAC 40 sont relativement rares par rapport à une distribution normale.


```{r}
# ATTENTION : hypothèses à vérifier avant d'utiliser ce test
shapiro.test(diff_cac40_ts)
```

La p-value de 0.0001398, inférieure à 0.01, indique que l'hypothèse nulle est rejetée au seuil de risque de 1%. Cela signifie que les données ne suivent pas une distribution normale. Ainsi, la série différenciée du CAC 40 n'est pas normalement distribuée d'après le test de Shapiro-Wilk.

```{r}
boxplot(
  diff_cac40_ts,
  main = "Boxplot de la série diff_cac40",
  ylab = "Différenciation du CAC40"
)
```

Nous observons plusieurs valeurs potentiellement atypiques.
Nous devons vérifier si ces valeurs sont réellement atypiques.


```{r}
library(EnvStats)
rosnerTest(diff_cac40_ts, k = 10, alpha = 0.05)
```

D'après le test de Rosner, ces valeurs ne sont pas considérées comme atypiques.




# 2. Estimation des modèles linéaires  
## a. Estimer et commenter les paramètres des modèles AR(1), AR(p) et ARIMA(p,d,q) et de 
la méthode LED Holt-Winters, ADAM ETS, ADAM ETS ARIMA, SSARIMA et CES 

# POSER AU PROF LA QUESTION : devons-nous utiliser les séries différenciées en fonction du modèle ?

### AR(1)
```{r}
library(forecast)
mod_ar1 <- Arima(diff_cac40_ts, order = c(1, 0, 0))
summary(mod_ar1)
```


### AR(p)

```{r}
mod_arp <- ar(diff_cac40_ts, method = "yw")
mod_arp$order
mod_arp$ar
```



### Autoarima

```{r}
mod_arima <- auto.arima(cac40_ts)
summary(mod_arima)
```


### Lissage Exponentiel Double (LED) de Holt-Winters

```{r}
# ---- Modélisation ----

# Modèle LED Holt-Winters : lissage exponentiel double (niveau + tendance)
m <- HoltWinters(cac40_ts, gamma = FALSE)

# ---- prévision ----

# Prévision sur un horizon h = 50 avec intervalles de confiance à 80% et 95%
fit <- forecast(m, h = 50) # ← prévision à 50 périodes
plot(fit)
show(fit)

# Prévisions ponctuelles
prevf <- fit$mean # ← point de prévision
show(prevf)

# Informations sur le modèle ajusté
mod <- fit$model
show(mod)
```


###  ADAM ETS (Error-Trend-Seasonal)

```{r}
# Modèle ADAM ETS
library(smooth)

mod_adam_ets <- auto.adam(
  cac40_ts, # série d'entrée (ici le CAC 40)
  model = "ZZZ", # sélection automatique du meilleur ETS (niveau, tendance, saisonnalité)
  lags = c(1, 12), # lags utilisés pour la structure ETS (court terme et saisonnalité mensuelle)
  select = TRUE # active la sélection du meilleur modèle selon l’AIC
)

summary(mod_adam_ets)

# Affichage des états internes du modèle ADAM ETS
forecast_adam <- forecast(mod_adam_ets, h = 12, level = 0.95)
plot(forecast_adam)
```


### ADAM ETS-ARIMA (modèle hybride)

```{r}
# Modèle ADAM ETS + ARIMA
library(smooth)

mod_ets_arima <- auto.adam(
  cac40_ts, # série utilisée
  model = "ZZZ", # laisse le modèle ETS optimal être choisi
  lags = c(1, 1, 12), # Retards utilisés dans le modèle : premier 1 pour la tendance,
  # deuxième 1 pour la composante ARIMA, 12 pour la saisonnalité
  orders = list(
    ar = c(3, 3), # ordre max des polynômes AR (non-saisonnier, saisonnier)
    i  = c(2), # max différenciation (ici, jusqu’à I(2))
    ma = c(3, 3) # ordre max des polynômes MA
  ),
  select = TRUE # sélection automatique du meilleur sous-modèle
)

summary(mod_ets_arima)

forecast_adamarima <- forecast(mod_ets_arima, h = 12, level = 0.95)
plot(forecast_adamarima)
```


### SSARIMA (State Space ARIMA)

```{r}
# Modèle SSARIMA
library(smooth)

fitssarima <- auto.ssarima(
  cac40_ts, # série utilisée
  lags = c(1, 12), # spécifie une structure SARIMA mensuelle
  orders = list(
    ar = c(3, 3), # ordre max AR non saisonnier et saisonnier
    i = c(2), # ordre max de différenciation
    ma = c(3, 3)
  ), # ordre max MA non saisonnier et saisonnier
  select = TRUE # sélection automatique du meilleur modèle
)

summary(fitssarima)

# Graphiques
par(mfcol = c(2, 2))
plot(fitssarima)

# Prévision sur 12 mois (avec IC à 90 %)
prevssarima <- forecast(fitssarima, h = 12, level = 0.90) # ← prévision du modèle SSARIMA pour h = 12
plot(prevssarima)
```

### CES (Complex Exponential Smoothing)

```{r}
# Modèle CES (Complex Exponential Smoothing)
library(smooth)

# Estimation automatique du meilleur modèle CES
mod_ces <- auto.ces(
  cac40_ts, # série temporelle utilisée
)

# Résumé des paramètres estimés, AIC, erreurs, etc.
summary(mod_ces)

# Graphiques de diagnostic (décomposition, résidus, QQ-plot, etc.)
par(mfrow = c(2, 2)) # disposition des 4 graphiques
plot(mod_ces)

# Prévision sur 12 périodes avec intervalle à 95 %
prev_ces <- forecast(mod_ces, h = 12, level = 0.95)

# Graphique des prévisions avec intervalle de confiance
plot(prev_ces)
```







# 3. Prévision linéaire sur une année 



## Création données 

```{r}
# Données simulées
mois <- c("janv.-18", "févr.-18", "mars-18", "avr.-18", "mai-18", "juin-18")

df <- data.frame(
  mois = factor(mois, levels = mois),
  STL = c(3600, 3550, 3400, 3300, 3250, 3225),
  `ADAM ETS+ARIMA` = c(3550, 3600, 3500, 3550, 3620, 3550),
  `Holt-Winters` = c(3590, 3540, 3410, 3310, 3260, 3230),
  ETS = c(3600, 3560, 3405, 3305, 3255, 3230),
  `ADAM ETS` = c(3605, 3555, 3410, 3310, 3260, 3235),
  `ADAM ETS+SARIMA` = c(3602, 3552, 3415, 3320, 3270, 3240),
  SSARIMA = c(3601, 3551, 3402, 3302, 3252, 3228),
  réalisée = c(3603, 3553, 3400, 3300, 3250, 3225)
)
df_long <- pivot_longer(df, -mois, names_to = "Méthode", values_to = "Valeur")
```

## Prévision
```{r}
ggplot(df_long, aes(x = mois, y = Valeur, color = Méthode, group = Méthode)) +
  geom_line(size = 1.1) +
  labs(
    title = "Évolution des prévisions pour les différentes méthodes",
    x = NULL,
    y = NULL
  ) +
  theme_minimal(base_size = 13) +
  theme(
    plot.title = element_text(face = "bold", hjust = 0.5),
    legend.position = "bottom",
    legend.title = element_blank()
  )
```




